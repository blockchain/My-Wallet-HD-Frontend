form.bc-form(
  name="checkoutForm"
  ng-submit="$ctrl.tradeAccount ? enableTrade(): trade();"
  novalidate
  autocomplete="off")
  fieldset(ng-disabled="locked || trading().isDisabled")
    .group
      .item
        .flex-between.flex-baseline.mbs
          .flex-row
             span.f-16.em-500.colon Enter Amount
             div(ng-hide="state.rate && !state.loadFailed")
               helper-button(content="EXCHANGE_RATE_HELPER_TWO")
          span
            div.flex-row.flex-center(ng-show="state.rate && !state.loadFailed && !checkoutForm.$error.min")
              span 1 {{ bitcoin.code }} = {{ format(state.rate, fiat, false) }} {{fiat.code}}
              helper-button(content="EXCHANGE_RATE_HELPER")
            .state-danger-text(ng-show="state.loadFailed")
              i.ti-alert
              span.mls(translate="{{state.error || 'Failed to load exchange data'}}")
            .state-danger-text.f-12(ng-show="!state.loadFailed && checkoutForm.$error.min")
              i.ti-alert
              span.mls Please enter an amount greater than {{ format(min.fiat.toFixed(2), fiat, false) }} {{ fiat.code }}
        .flex-center
          .flex-1.flex-center.border
            input.form-control.no-border(
              type="number"
              name="fiat"
              ng-model="state.fiat"
              ng-max="max.fiat.toFixed(2)"
              ng-min="min.fiat.toFixed(2)"
              ng-change="state.baseCurr = fiat"
              step="1"
              prevent-event="mousewheel"
              focus-when="true"
              ng-model-options="{debounce: 250}"
              required)
            .input-dropdown(uib-dropdown)
              span.ph-10(uib-dropdown-toggle ng-class="{'arrow': fiatOptions.length}") {{fiat.code}}
              ul.uib-dropdown-menu.dropdown-menu-right(uib-dropdown-menu ng-if="fiatOptions.length")
                li(ng-repeat="currency in fiatOptions" ng-if="currency.code !== fiat.code")
                  a(ng-click="$ctrl.fiatChange({currency});") {{ currency.code }}
          i.ti-arrows-horizontal.h4.border-grey.phm.hidden-xs
          .flex-1.flex-center.border
            input.form-control.no-border(
              type="number"
              name="btc"
              ng-model="state.btc"
              ng-max="max.btc.toFixed(8)"
              ng-min="min.btc.toFixed(8)"
              ng-change="state.baseCurr = bitcoin"
              step="0.01"
              prevent-event="mousewheel"
              ng-model-options="{debounce: 250}"
              required)
            span.ph-10 {{bitcoin.code}}
        .f-12.mts
          span(translate="{{ provider + '.' + trading().reason + '.EXPLAIN' }}" translate-values="{max: max.fiat.toFixed(2), min: min.fiat.toFixed(2), curr: fiat.code}" ng-class="{'state-danger-text': checkoutForm.$error.max || trading().isDisabled}" ng-click="!trading().isDisabled && setMax()")
          | &nbsp;
          span(ng-repeat="(option, action) in trading().launchOptions")
            a(ng-click="action()" translate="{{ provider + '.' + trading().reason + '.' + option }}")
            | 
            span(ng-if="!$last") or 
    .group.mt-20(ng-if="$ctrl.collapseSummary")
      .item
        .mbm
          span.f-16.em-500.colon Order Summary
        .border.flex-column.bg-grey
          .flex-between.flex-center.form-control.bg-grey.no-border
            span.colon BTC Order
            span {{ format(state.btc || 0, bitcoin, true) }}
          .border-bottom.mhm(ng-if="typeof($ctrl.tradeAccount) === 'object'")
          .flex-between.flex-center.form-control.bg-grey.no-border(ng-if="typeof($ctrl.tradeAccount) === 'object'")
            span.colon Payment Method
            span.capitalize {{ $ctrl.tradeAccount.accountType }} ({{ $ctrl.tradeAccount.accountNumber }})
          .border-bottom.mhm
          .flex-between.flex-center.form-control.bg-grey.no-border.em-500
            span.colon Total Cost
            span {{ format(state.total || 0, fiat, true) }}
    .group.inline.mtl(ng-if="$ctrl.frequencies && !trading().isDisabled && $ctrl.showRecurringBuy")
      .item.inline.check
        input(type="checkbox" id="frequencyCheck" name="frequencyCheck" ng-model="state.frequencyCheck")
        label(for="frequencyCheck") Make this a recurring order
    .group(ng-if="state.frequencyCheck && !trading().isDisabled")
      .group.mtl
        .item.inline
          span.colon.f-13.em-500(translate="FREQUENCY")
          select(ng-model="state.frequency" name="state" ng-options="frequency as frequency for frequency in $ctrl.frequencies" ng-change="state.frequencyCheck = true")
        .item.mtm
          span(translate="FREQUENCY_INFO" translate-values="{timespan: recurringTimespan()}")
      .group.mtl
        .item.inline
          span.colon.f-13.em-500(translate="DURATION")
          input.fake-select(uib-datepicker-popup datepicker-options="{showWeeks: false, minDate: date}" is-open="state.datepickerIsOpen" ng-click="state.datepickerIsOpen = !state.datepickerIsOpen" ng-model="state.endTime" ng-value="state.endTime || 'Until I Cancel'" readonly)
        .item.mtm
          span(ng-show="!state.endTime") You can cancel anytime.
          span(ng-show="state.endTime" translate="DURATION_INFO" translate-values="{endTime: state.endTime.toDateString()}")
    .group.mtl
      button.btn.button-primary.full(type="submit" ng-disabled="locked || checkoutForm.$invalid || !quote || state.loadFailed") {{ $ctrl.type }} Bitcoin
