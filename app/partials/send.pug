.modal-header.flex-column.bc-modal-header(data-preflight-tag="Send")
  .flex-center
    h3
      i.mr-10.icon-send
      span(ng-show="!confirm", translate="SEND_BITCOIN")
      span(ng-show="confirm", translate="CONFIRM")
#send.modal-body(ng-class="{'confirmation': confirm, 'sm': numberOfActiveAccountsAndLegacyAddresses() <= 1}")
  .alert-in-app
    alerts(context="alerts")
  div(ng-hide="confirm")
    form.bc-form(role="form" name="sendForm" autocomplete="off" novalidate)
      fieldset
        .group
          //- From
          .item.mb-20(ng-show="numberOfActiveAccountsAndLegacyAddresses() > 1")
            label.colon(translate="FROM")
            .flex-1(ng-class="{'has-error': (sendForm.from.$invalid && sendForm.destinations0.$touched) || (sendForm.priv.$invalid && sendForm.priv.$touched) }")
              p.form-control-static(ng-hide="originsLoaded")
                img(src="img/spinner.gif")
              ui-select.send-from-dropdown(
                ng-model="transaction.from"
                name="from"
                ng-show="originsLoaded"
                ng-change="checkForSameDestination(); setPaymentFrom()"
                tagging
                required)
                ui-select-match(placeholder="{{'SEARCH' | translate}}...")
                  label-origin(origin="$select.selected" ng-class="{'state-danger-text': $select.selected.balance === 0}")
                ui-select-choices(repeat="origin in origins | filter:{label:$select.search} | limitTo:originLimit" group-by="'type'" ui-disable-choice="::hasZeroBalance(origin)")
                  span(ng-class="::{aaa:hasZeroBalance(origin)}" in-view="$last && origin.type==='Imported Addresses' && increaseLimit()")
                    label-origin(origin="::origin" highlight="$select.search")

              //- Private Key for Watch Only
              .input-group.pbm(ng-show="transaction.from.isWatchOnly")
                input.form-control(
                  name="priv"
                  placeholder="{{ 'ENTER_PRIV' | translate }}..."
                  ng-model="transaction.priv"
                  ng-required="transaction.from.isWatchOnly"
                  is-valid="!transaction.from.isWatchOnly || isValidPrivateKey(transaction.priv)")
                .input-group-btn
                  qr-scan.form-control(on-scan="setPrivateKey")
              span.help-block(ng-show="sendForm.from.$invalid && sendForm.destinations0.$touched", translate="MUST_SELECT_ORIGIN")
              span.help-block.inprv(ng-show="sendForm.priv.$invalid && sendForm.priv.$touched" translate="INVALID_PRIV")
          //- To
          .item
            label.colon(translate="TO")
            div
              .flex-column(ng-repeat="item in transaction.destinations track by $index")
                p.form-control-static(ng-hide="originsLoaded")
                  img(src="img/spinner.gif")
                div(ng-show="originsLoaded" ng-class="{'has-error': sendForm['destinations' + $index].$invalid && sendForm['destinations' + $index].$touched && transaction.destinations[$index].address !== ''}")
                  destination-input(
                    name="{{ 'destinations' + $index }}"
                    ng-model="transaction.destinations[$index]"
                    ng-model-options="{ updateOn: 'blur' }"
                    ng-change="checkForSameDestination()"
                    ng-paste="handlePaste($event, $index)"
                    on-payment-request="applyPaymentRequest(request, $index)"
                    set-input-metric="$parent.inputMetric = metric"
                    ignore="transaction.from"
                    required)
                .has-error
                  span.help-block.type-sm(translate="BITCOIN_ADDRESS_INVALID" ng-show="sendForm['destinations' + $index].$error.isValidAddress && sendForm['destinations' + $index].$touched && transaction.destinations[$index].address !== ''")
                  span.help-block.type-sm(translate="SAME_DESTINATION" ng-show="sendForm['destinations' + $index].$error.isNotEqual")
          //- Amount
          .item.mt-20
            label.colon(translate="AMOUNT")
            .flex-center
              .flex-1.flex-center.border
                input.form-control.no-border(
                  type="number"
                  ng-model="transaction.amount"
                  name="amount"
                  tabindex="1"
                  transform-currency="btcCurrency"
                  placeholder="0"
                  min="1"
                  max="2100000000000000"
                  ng-change="setPaymentAmount()"
                  required
                )
                span.mhm {{ btcCurrency.code }}
              i.ti-arrows-horizontal.h4.border-grey.phm.hidden-xs
              .flex-1.flex-center.border
                input.form-control.no-border(
                  type="number"
                  ng-model="transaction.amount"
                  name="fiatAmount"
                  tabindex="1"
                  transform-currency="fiatCurrency"
                  placeholder="0"
                  min="1"
                  max="2100000000000000"
                  ng-change="setPaymentAmount()"
                  required
                )
                span.mhm {{ fiatCurrency.code }}
            .has-error
              span.help-block(
                ng-click="useAll()"
                ng-class="{'pointer': transaction.destinations.length === 1}"
                ng-show="transaction.maxAvailable != null && getTransactionTotal() > transaction.maxAvailable && !failedToLoadUnspent")
                span.type-sm(translate="USE_TOTAL")
                | :&nbsp;
                span.type-sm {{ transaction.maxAvailable | convert:'btc' }}
              span.help-block(ng-show="failedToLoadUnspent" ng-click="reopenModal()")
                span.type-sm.pointer(translate="ERR_FETCH_UNSPENT_RETRY")
          //- Description
          .item.mt-20
            label
              span(translate="DESCRIPTION:")
              helper-button(content="SEND_BITOIN_STEP2B")
            .flex-1
              textarea.pas(rows="4" ng-model="transaction.note" name="note" maxlength="512" placeholder="{{'NOTE_PLACEHOLDER' | translate}}")
        //- Fee
        .group(ng-if="!advanced")
          .group.inline.flex-center.mt-20
            .item.inline.width-50
              label.mbn.colon(translate="TX_FEE")
              select(ng-model="transaction.feeType" name="fee" ng-change="payment.updateFeeType(transaction.feeType)" ng-options="feeType as feeType | translate for (feeType, fee) in transaction.fees | fees" tabindex="" required)
            .item.right-align.width-50
              span.f-14 {{ transaction.fee | convert:'btc':true }} ({{ transaction.fee | convert:'fiat':true }})
          .group.inline.mt-5
            .item.inline.width-100.flex-between
              span.f-12 {{ transaction.feeType + '_ESTIMATION_TIME' | translate }}
              a.f-12(ng-if="transaction.size > 0" ng-click="advancedSend()" translate="Customize Fee")
        //- Custom Fee
        .group(ng-if="advanced")
          .group.inline.flex-center.mt-10
            .item.width-50
              label.colon(translate="TX_FEE")
              .flex-center
                .flex-1.flex-center.border
                  input.form-control.no-border(
                    name="fee"
                    type="number"
                    step="any"
                    focus-when="advanced"
                    ng-change="setPaymentFee()"
                    transform-currency="satoshi"
                    ng-model="transaction.satoshiPerByte"
                    required)
                  span.mhm sat/b
            .item.right-align.width-50
              label.fade(translate="FEE")
              span.f-14 {{ transaction.fee | convert:'btc':true }} ({{ transaction.fee | convert:'fiat':true }})
              a.f-12(ng-click="regularSend()" translate="Cancel")
  //- Step 2 (confirm)
  div.overview(ng-show="confirm")
    .flex-column
      .flex-row
        span.mbl(ng-show="transaction.note.length")
          span.type-h5.ti-notepad.mrs
          span.type-lbl {{ transaction.note }}
      .flex-column
        .flex-column
          span.type-lbl.mbs.underline(translate="TO")
          .mls.mbs.flex-row.flex-center.center(ng-repeat="address in getToLabels() track by $index")
            span.account.mvn.width-50-mobile.width-60.em-400(translate="no") {{ address.label || address.address }}
            .width-50.width-50-mobile.flex-between
              span(ng-class="{success: address.type !== 'External'}")
                span(ng-class="{fade: address.type === 'External'}") +&nbsp;
                span {{transaction.amount | toBitCurrency:btcCurrency:false}}
              span(ng-class="{success: address.type !== 'External'}")
                span(ng-show="address.type !== 'External'") +&nbsp;
                fiat.mrml(btc="transaction.amount")
          .mls.mbs.flex-row.flex-center.center.flex-between.pos-rel
            span.mid-grey.account.width-50-mobile.width-60.f-12(translate="{{AB_TEST_FEE ? 'TX_FEE' : 'TX_FEE_REQUIRED'}}")
            .width-50.width-50-mobile.flex-between
              span.mid-grey.center
                span.fade +&nbsp;
                span {{ transaction.fee | toBitCurrency:btcCurrency:false}}
              span.mid-grey.center
                fiat.mrml(btc="transaction.fee")
            helper-button(content="{{AB_TEST_FEE ? 'TX_FEE_CONFIRM_EXPLAIN' : 'DYK_TX_FEES'}}")
        .mvm.flex-justify.flex-1.flex-center.split-rule
        span.type-lbl.mbs.underline(translate="FROM")
        .mls.flex-row.flex-center.center.flex-between
          span.account.width-50-mobile.width-60.mvn.em-400.long-input(translate="no") {{ transaction.from.label || transaction.from.address }}
          .width-50.width-50-mobile.flex-between
            span.flex-start.security-red - {{getTransactionTotal(true) | toBitCurrency:btcCurrency:false}}
            span.security-red -&nbsp;
              fiat.mrml(btc="getTransactionTotal(true)")
.modal-footer.flex-end.flex-center.pal
    button.button-muted.mrm(ng-click="close()" translate="CANCEL" ng-hide="confirm")
    button.button-muted.mrm(ng-click="backToForm()" translate="BACK" ng-show="confirm")
    button.button-primary(
      ladda-translate="NEXT_STEP"
      ui-ladda="building"
      ng-click="goToConfirmation()"
      tabindex="1"
      ng-disabled="sendForm.$invalid || failedToLoadUnspent || !amountsAreValid()"
      data-style="expand-left"
      ng-hide="confirm")
    button.button-primary(
      ladda-translate="SEND"
      ui-ladda="sending"
      ng-click="send()"
      data-style="expand-left"
      ng-show="confirm")
